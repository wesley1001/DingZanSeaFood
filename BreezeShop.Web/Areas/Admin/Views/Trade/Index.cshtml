@using BreezeShop.Core.FileFactory
@using BreezeShop.Web.Helper
@model BreezeShop.Core.PageModel<Yun.Trade.SnapshotTrade>
@{
    ViewBag.Title = "已卖出的商品";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section headerbeforeace{
<link href="@Url.Content("~/Areas/Admin/Content/css/bootstrap-datetimepicker.css")" rel="stylesheet" />
    <style>
  td.baobei .pic{float:left;margin-right:5px;width:60px;height:60px}
.order-hd td{background:#f2f2f2}
.order-hd td .left{float:left}
.order-hd td .right{float:right}
td.trade-status a{display:block;text-align:center}
td.trade-status{text-align:center}
.sep-row td{background:#FFF!important}
.order-bd td,.order-hd td{border-left:1px solid #DDD;border-right:1px solid #DDD}
.bought-table>tbody+tbody{border-top:1px solid #ddd}
.bought-table em,.bought-table i{font-style:normal}
.bought-table thead th{text-align:center;white-space:nowrap}
.flag-options img{vertical-align:baseline}
.flag-0{color:#7e7e7e}
.flag-1{color:#fd0000}
.flag-2{color:#fcf80e}
.flag-3{color:#2dfd4f}
.flag-4{color:#0051fd}
.flag-5{color:#dc00f8}
    </style>
}
@section breadcrumb{
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Action("Index","Home")">首页</a>
        </li>
        <li class="active">已卖出的商品</li>
    </ul>
}

@section pageheader{
    <h1>
        已卖出的商品
    </h1>
}
<ul class="nav nav-pills list-unstyled" tradestatus="@Request.QueryString["tradestatus"]">
    <li tradestatus="" class="active"><a href="@Url.Action("Index", "Trade", new { area = "admin" })">所有订单</a></li>
    <li tradestatus="NOT_PAID" class=""><a href="@Url.Action("Index", "Trade", new { area = "admin", tradeStatus = "NOT_PAID" })">等待买家付款</a></li>
    <li tradestatus="PAID"><a href="@Url.Action("Index", "Trade", new { area = "admin", tradeStatus = "PAID" })">等待发货</a></li>
    <li tradestatus="SEND"><a href="@Url.Action("Index", "Trade", new { area = "admin", tradeStatus = "SEND" })">已发货</a></li>
    <li tradestatus="REFUNDING"><a href="@Url.Action("Index", "Trade", new { area = "admin", tradeStatus = "REFUNDING" })">退款中</a></li>
    <li tradestatus="I_HAS_NOT_COMMENT"><a href="@Url.Action("Index", "Trade", new { area = "admin", tradeStatus = "I_HAS_NOT_COMMENT"})">需要评价</a></li>
    <li tradestatus="SUCCESS"><a href="@Url.Action("Index", "Trade", new { area = "admin", tradeStatus = "SUCCESS" })">成功的订单</a></li>
    <li tradestatus="DROP"><a href="@Url.Action("Index", "Trade", new { area = "admin", tradeStatus = "DROP" })">关闭的订单</a></li>
</ul>
<div class="space-10"></div>
<div class="table-header" id="mytestcheckbox">
    交易列表
</div>
<div class="table-responsive">
<div class="dataTables_wrapper">
<div class="row">
    <form method="GET" action="@Url.Action("Index", "Trade", new {area = "Admin"})" class="col-sm-12" id="j-trade-form">
        <div class="form-inline">
            <div class="form-group">商品名称：</div>
            <div class="form-group"><input type="text" class="input-large" name="itemtitle" value="@Request.QueryString["itemtitle"]"/>
            </div>
            <div class="form-group">买家昵称：</div>
            <div class="form-group"><input type="text" class="input-small" name="nick" value="@Request.QueryString["nick"]"/>
            </div>
            <div class="form-group">评价状态：</div>
            <div class="form-group">
                @Html.DropDownList("commentstatus", new List<SelectListItem>
                {
                    new SelectListItem {Text = "全部", Value = "ALL", Selected = Request.QueryString["tradestatus"].IsEmpty() || Request.QueryString["tradestatus"] == "ALL"},
                    new SelectListItem {Text = "需我评价", Value = "I_HAS_NOT_COMMENT", Selected = Request.QueryString["tradestatus"] == "I_HAS_NOT_COMMENT"},
                    new SelectListItem {Text = "我已评价", Value = "I_HAS_COMMENT", Selected = Request.QueryString["tradestatus"] == "I_HAS_COMMENT"},
                    new SelectListItem {Text = "对方已评", Value = "OTHER_HAS_COMMENT", Selected = Request.QueryString["tradestatus"] == "OTHER_HAS_COMMENT"},
                    new SelectListItem {Text = "双方已评", Value = "ALL_COMMENT", Selected = Request.QueryString["tradestatus"] == "ALL_COMMENT"},
                })
            </div>
        </div>
        <div class="space-4"></div>

        <div class="form-inline">
            <div class="form-group">订单编号：</div>
            <div class="form-group">
                <input type="text" class="input-large" name="orderid" value="@Request.QueryString["orderid"]"/>
            </div>
            <div class="form-group">订单状态：</div>
            <div class="form-group">
                @Html.DropDownList("tradestatus", new List<SelectListItem>
                {
                    new SelectListItem {Text = "全部", Value = "ALL", Selected = Request.QueryString["tradestatus"].IsEmpty() || Request.QueryString["tradestatus"] == "ALL"},
                    new SelectListItem {Text = "交易关闭", Value = "DROP", Selected = Request.QueryString["tradestatus"] == "DROP"},
                    new SelectListItem {Text = "等待买家付款", Value = "NOT_PAID", Selected = Request.QueryString["tradestatus"] == "NOT_PAID"},
                    new SelectListItem {Text = "等待发货", Value = "PAID", Selected = Request.QueryString["tradestatus"] == "PAID"},
                    new SelectListItem {Text = "卖家已发货", Value = "SEND", Selected = Request.QueryString["tradestatus"] == "SEND"},
                    new SelectListItem {Text = "交易成功", Value = "SUCCESS", Selected = Request.QueryString["tradestatus"] == "SUCCESS"},
                    new SelectListItem {Text = "退款中订单", Value = "REFUNDING", Selected = Request.QueryString["tradestatus"] == "REFUNDING"},
                    new SelectListItem {Text = "异常订单", Value = "EXCEPTIONAL", Selected = Request.QueryString["tradestatus"] == "EXCEPTIONAL"}
                })
            </div>

        </div>
        <div class="space-4"></div>

        <div class="form-inline">
            <div class="form-group">成交时间：</div>
            <div class="form-group">
                从<input type="text" value="@Request.QueryString["orderdatebegin"]" name="orderdatebegin" class="date-picker" readonly="readonly" data-date-format="yyyy-mm-dd hh:ii"/>
            </div>
            <div class="form-group">
                到<input type="text" value="@Request.QueryString["orderdateend"]" name="orderdateend" class="date-picker" readonly="readonly" data-date-format="yyyy-mm-dd hh:ii"/>
            </div>
        </div>
        <div class="space-4"></div>

        <div class="form-inline">
            <div class="form-group">手机号码：</div>
            <div class="form-group">
                <input type="text" class="input-large" name="mobile" value="@Request.QueryString["mobile"]"/>
            </div>
        </div>
        <div class="space-4"></div>

        <div class="form-inline">
            <button class="btn btn-purple btn-sm j-trade-btn" type="button" data-url="@Url.Action("Index", "Trade", new {area = "Admin"})">
                <i class="icon-search icon-on-right bigger-110"></i>
                搜索
            </button>
            <button class="btn btn-sm j-trade-btn" type="button" data-url="@Url.Action("ExportTradesExcel", "Trade", new {area = "Admin"})">
                <i class="icon-undo bigger-110"></i>
                导出订单
            </button>
        </div>
    </form>
</div>
<table class="table table-bordered dataTable bought-table">
    <thead>
    <tr class="col-name">
        <th class="baobei">宝贝</th>
        <th class="price">单价(元)</th>
        <th class="quantity">数量</th>
        <th class="trade-status">售后</th>
        <th class="buyer-info">买家</th>
        <th class="trade-status">交易状态</th>
        <th class="amount">实付款(元)</th>
    </tr>
    <tr class="toolbar toolbar-top">
        <td colspan="7">
            <div class="operates">
                <label><input type="checkbox" class="all-selector"> 全选</label>
            </div>
        </td>
    </tr>
    </thead>
    @foreach (var trade in Model.Items)
    {
        int countnumber = 0;
        <tbody>
        <tr class="sep-row"><td colspan="7"></td></tr>
        <tr class="order-hd">
            <td colspan="7">
                <div class="left">
                    <span>
                                    <input type="checkbox" value="@trade.Id" id="@("cb" + trade.Id)" class="">
                                </span>
                    <span class="order-id">订单编号：@trade.Id</span>
                    <span class="dealtime" title="@trade.CreateTime"> 成交时间：@trade.CreateTime</span>
                </div>
                <div class="right operates">

                    @(trade.SellerMemo != null ? trade.SellerMemo.Remark : "")

                    <a type="button" href="@Url.Action("Mark", "Trade")" data-id="@trade.Id" class="btn btn-minier btn-info mark-trade">
                        标记
                        <i class="icon-flag @(trade.SellerMemo != null ? "flag-" + trade.SellerMemo.Flag : "")"></i>
                    </a>
                </div>
            </td>
        </tr>
        @foreach (var order in trade.Orders)
        {
            countnumber++;
            <tr class="order-bd" id="@("item" + order.ItemId)">
                <td class="baobei">
                    <a class="pic" href="@Url.Action("GoodsDetail", "Home", new {area = "", id = order.ItemId})" title="查看宝贝详情" target="_blank">
                        <img class="pic" src="@ImageExtension.GetUrl(ImageSize._60x60, order.Thumb)" alt="查看宝贝详情">
                    </a>
                    <div class="desc">
                        <p class="baobei-name">
                            <a class="" href="@Url.Action("GoodsDetail", "Home", new {area = "", id = order.ItemId})" target="_blank">
                                @order.ItemTitle
                            </a>
                        </p>
                        <div class="spec">
                            @if (order.SkuNames != null)
                            {
                                foreach (var s in order.SkuNames)
                                {
                                    <span>@s.Value</span>
                                }
                            }
                        </div>
                    </div>
                </td>
                <td title="@order.Price.ToString("f2")" class="price text-center">
                    <i class="special-num">@order.Price.ToString("f2")</i>
                </td>
                <td title="@order.Quantity" class="quantity text-center">
                    <i class="special-num"><strong>@order.Quantity</strong></i>
                </td>
                <td class="text-center">
                    @if (trade.TradeStatus != "WAIT_BUYER_PAY"
                         && !trade.TradeStatus.Contains("CLOSED")
                         && order.RefundStatus == "NORMAL")
                    {
                        <a href="@Url.Action("RunRefund", "Trade", new {tradeid = trade.Id, orderid = order.Id})" class="btn btn-minier btn-info j-do-refund">
                            退款
                        </a>
                    }
                    @if (order.RefundStatus == "WAIT_SELLER_AGREE")
                    {
                        <a href="@Url.Action("DoWxRefund", "Trade", new {orderid = order.Id, tradeid = trade.Id})" class="btn btn-minier btn-info">
                            同意退款
                        </a>
                    }
                    @if (order.RefundStatus != "WAIT_SELLER_AGREE" && order.RefundStatus != "NORMAL")
                    {
                        <a href="javascript:;">退款成功</a>
                    }
                </td>
                @if (countnumber <= 1)
                {
                    <td class=" text-success buyer-info text-center"><a href="@Url.Action("Index", "Trade", new {area = "Admin", nick = trade.Nick})">@trade.RealName</a></td>

                    <td rowspan="@trade.Orders.Count" class="trade-status">
                        @if (trade.TradeStatus == "WAIT_BUYER_CONFIRM_GOODS")
                        {
                            <a class="javascript:;">卖家已发货</a>
                        }
                        @if (trade.TradeStatus == "WAIT_BUYER_PAY")
                        {
                            @Html.Raw("等待买家付款")
                        }
                        @if (trade.TradeStatus == "TRADE_FINISHED")
                        {
                            <a class="javascript:;">交易成功</a>
                        }
                        @if (trade.TradeStatus == "TRADE_CLOSED_BY_SELF" || trade.TradeStatus == "TRADE_CLOSED")
                        {
                            <a class="javascript:;">交易关闭</a>
                        }
                        <a class="" target="_blank" href="@Url.Action("Detail", "Trade", new {area = "Admin", id = trade.Id})">订单详情</a>
                        @if (trade.TradeStatus == "WAIT_SELLER_SEND_GOODS")
                        {
                            <button type="button" href="@Url.Action("Delivery", "Trade")" data-id="@trade.Id" class="btn btn-minier btn-info delivery">
                                发货
                            </button>
                        }
                        @if (trade.TradeStatus == "WAIT_BUYER_CONFIRM_GOODS")
                        {
                            <button type="button" href="@Url.Action("Delay", "Trade")" data-id="@trade.Id" class="btn btn-minier btn-info j-delay">
                                延长收货时间
                            </button>
                        }
                        @if (trade.TradeStatus == "WAIT_BUYER_PAY")
                        {
                            <button type="button" class="btn btn-minier btn-info close-trade" data-id="@trade.Id">
                                关闭交易
                            </button>
                        }
                    </td>
                    <td rowspan="@trade.Orders.Count" class="amount text-center">
                        <p class="text-center">
                        @(trade.Money)
                        <br/>
                        @if (trade.IsCoupon)
                        {
                            @:(电子券)
                        }
                        else
                        {
                            @:(含运费：<i>@trade.Fare.ToString("f2")</i>)
                        }
                        <p>
                            @if (trade.TradeStatus == "WAIT_BUYER_PAY")
                            {

                                <button type="button" class="btn btn-minier btn-info price" href="@Url.Action("ModifyTradePrice", "Trade")" data-id="@trade.Id">修改价格</button>
                            }
                        </p>
                    </td>
                }
            </tr>
        }
        </tbody>
    }
</table>

@Html.Pager("PagerBottom", Model.CurrentPage, Model.TotalItems, "_PagerTemplate", 20)
</div>
</div>

@section specificscripts{
    <script src="@Url.Content("~/areas/admin/Content/js/bootbox.js")"></script>
    <script src="@Url.Content("~/areas/admin/Content/js/datetimepicker/bootstrap-datetimepicker.min.js")"></script>
    <script src="@Url.Content("~/areas/admin/Content/js/datetimepicker/locales/bootstrap-datetimepicker.zh-CN.js")"></script>
}

@section inlinescripts{
    <script type="text/javascript">
        $(".date-picker").datetimepicker({ format: 'yyyy-mm-dd hh:ii', language: 'zh-CN' ,autoclose:true, bootcssVer:3});

        $(".all-selector").click(function() {
            if ($(this).prop("checked")) {
                $(".order-hd input:checkbox").each(function() {
                    $(this).prop("checked", true);
                });
            } else {
                $(".order-hd input:checkbox").each(function() {
                    $(this).prop("checked", false);
                });
            }
        });

        $(".j-trade-btn").click(function() {
            $("#j-trade-form").attr("action", $(this).data("url")).submit();
        });

        function delay(e, title, id, submitSuccess) {
            $.get($(e).attr("href"), { id: id }, function(html) {
                bootbox.dialog({
                    message: html,
                    title: title,
                    buttons: {
                        success: {
                            label: "提交",
                            className: "btn-success",
                            callback: function() {
                                var days = $(".j-delay-days").val();
                                if (days.length > 0) {
                                    $.post("/admin/trade/delay/" + id, { days: days }, function(r) {
                                        if (r.result) {
                                            submitSuccess();
                                        } else {
                                            bootbox.alert(r.error == null ? "操作失败，请刷新后重试" : r.error);
                                        }
                                    });
                                } else {
                                    bootbox.alert("请输入延长时间");
                                }
                                return false;
                            }
                        },
                        danger:
                        {
                            label: "取消",
                            className: "btn-danger",
                            callback: function() {}
                        }
                    }
                });
            });
        }

        $(".j-delay").click(function() {
            delay(this, $(this).text(), $(this).attr("data-id"), function() {
                bootbox.alert("操作成功");
                window.location.reload();
            });
            return false;
        });

        function markTrade(e, title, id, submitSuccess) {
            $.get($(e).attr("href"), { id: id }, function(html) {
                bootbox.dialog({
                    message: html,
                    title: title,
                    buttons: {
                        success: {
                            label: "提交",
                            className: "btn-success",
                            callback: function() {
                                var flag = $("input[name='radio-flag']:checked").val();
                                var remark = $(".j-memo-remark").val();
                                if (flag.length > 0 || remark.length > 0) {
                                    $.post("/admin/trade/Mark/" + id, { flag: flag, remark: remark }, function(r) {
                                        if (r.result) {
                                            submitSuccess();
                                        } else {
                                            bootbox.alert(r.error == null ? "添加失败，请刷新后重试" : r.error);
                                        }
                                    });
                                } else {
                                    bootbox.alert("请输入标记内容");
                                }
                                return false;
                            }
                        },
                        danger:
                        {
                            label: "取消",
                            className: "btn-danger",
                            callback: function() {}
                        }
                    }
                });
            });
        }

        $(".mark-trade").click(function() {
            markTrade(this, $(this).text(), $(this).attr("data-id"), function() {
                window.location.reload();
            });
            return false;
        });

        function bulkMark(e, title, id, submitSuccess) {
            $.get($(e).attr("href"), { id: id }, function(html) {
                bootbox.dialog({
                    message: html,
                    title: title,
                    buttons: {
                        success: {
                            label: "提交",
                            className: "btn-success",
                            callback: function() {
                                var flag = $("input[name='radio-flag']:checked").val();
                                var remark = $(".j-memo-remark").val();
                                if (flag.length > 0 || remark.length > 0) {
                                    $.post("/admin/trade/BulkMark/" + id, { flag: flag, remark: remark }, function(r) {
                                        if (r.result) {
                                            submitSuccess();
                                        } else {
                                            bootbox.alert(r.error == null ? "添加失败，请刷新后重试" : r.error);
                                        }
                                    });
                                } else {
                                    bootbox.alert("请输入要修改的内容");
                                }

                                return false;
                            }
                        },
                        danger:
                        {
                            label: "取消",
                            className: "btn-danger",
                            callback: function() {}
                        }
                    }
                });
            });
        }

        $(".bulk-mark").click(function() {
            var num = 1;
            var result = "";
            //判断是否有文本框被选中
            $(".order-hd input:checkbox").each(function() {
                if ($(this).prop("checked")) {
                    if (num > 1) {
                        result += ",";
                    }
                    result += $(this).val();
                    num++;
                }
            });
            if (result.length <= 0) {
                bootbox.alert("请选择要标记的订单");
            } else {
                bulkMark(this, $(this).text(), result, function() {
                    parent.bootbox.alert("成功！");
                    $(".order-hd input:checkbox").each(function() {
                        $(this).prop("checked", false);
                    });
                    window.location.reload();
                });
            }
        });
        $(".close-trade").click(function() {
            var id = $(this).attr("data-id");
            bootbox.confirm("确定要关闭此笔交易吗?", function(result) {
                if (result) {
                    $.post("/admin/trade/closetrade/", { id: id }, function(r) {
                        if (r.result) {
                            bootbox.alert("交易已被关闭");
                            setTimeout(function() {
                                window.location.reload();
                            }, 1000);
                        } else {
                            bootbox.alert(r.error == null ? "修改失败，请刷新后重试" : r.error);
                        }
                    });
                }
            });
        });

        function delivery(e, title, id, submitSuccess) {
            $.get($(e).attr("href"), { id: id }, function(html) {
                bootbox.dialog({
                    message: html,
                    title: title,
                    className: "dl-modifyprice",
                    buttons: {
                        danger:
                        {
                            label: "关闭",
                            className: "btn-danger",
                            callback: function() {
                                submitSuccess();
                            }
                        }
                    }
                });
            });
        }

        $(".delivery").click(function() {
            delivery(this, $(this).text(), $(this).attr("data-id"), function() {});
            return false;
        });

        function modifyPrice(e, title, id, submitSuccess) {
            $.get($(e).attr("href"), { id: id }, function (html) {
                bootbox.dialog({
                    message: html,
                    title: title,
                    className: "dl-modifyprice",
                    buttons: {
                        success: {
                            label: "提交",
                            className: "btn-success",
                            callback: function () {
                                var price = "";
                                var num = 1;
                                var postfee = $("#postfee").val();
                                $("#tb-modifyprice .J_money").each(function () {
                                    var name = $(this).val();
                                    var orderid = $(this).attr("data-orderid");
                                    if (name != "") {
                                        if (num > 1 && price.length > 0) {
                                            price += "#";
                                        }
                                        price += orderid + "," + name;
                                    }
                                    num++;
                                });
                                if (price.length > 0 || postfee.length > 0) {
                                    $.post("/admin/trade/modifytradeprice/" + id, { price: price, postfee: postfee }, function (r) {
                                        if (r.result) {
                                            submitSuccess();
                                        } else {
                                            bootbox.alert(r.error == null ? "操作失败，请刷新后重试" : r.error);
                                        }
                                    });
                                } else {
                                    bootbox.alert("请输入要修改的内容");
                                }

                                return false;
                            }
                        },
                        danger:
                        {
                            label: "取消",
                            className: "btn-danger",
                            callback: function () { }
                        }
                    }
                });
            });
        }

        $(".price").click(function () {
            modifyPrice(this, $(this).text(), $(this).attr("data-id"), function () {
                parent.bootbox.alert("价格修改成功");
                setTimeout(function () {
                    window.location.reload();
                }, 1000);
            });
            return false;
        });

        $(".j-do-refund").click(function () {

            if (!confirm("您真的确定要退款吗？退款不可逆的哦")) {
                return false;
            }

            //$(this).attr("disabled", "disabled").text("正在处理");
            $.post($(this).attr("href"), function (r) {
                if (r.result) {
                    bootbox.alert("退款成功");
                    setTimeout(function () {
                        window.location.reload();
                    }, 1000);
                } else {
                    //$(this).removeAttr("disabled");
                    bootbox.alert(r.error);
                }
            });

            return false;
        });

        $('.list-unstyled li').each(function () {
            if ($(this).attr("tradestatus") == $(".list-unstyled").attr("tradestatus")) {
                $(this).attr("class", "active");
            } else if ($(".list-unstyled").attr("tradestatus") == undefined && $(this).attr("tradestatus") == "") {
                $(this).attr("class", "active");
            } else {
                $(this).removeClass("active");
            }
        });

        $('[data-rel=tooltip]').tooltip();
    </script>
}